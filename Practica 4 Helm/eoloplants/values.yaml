servicetopo:
  type: ClusterIP
  port: 8181
  name: toposervice-service
serviceserver:
  type: ClusterIP
  port: 3000
  name: server-service

ingress:
  enabled: true
  className: ""
  annotations: {
    nginx.ingress.kubernetes.io/rewrite-target: /$1
  }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: cluster-ip
      paths:
        - path: /(.*)
          pathType: ImplementationSpecific
          backservicename: "server-service"
          backserviceport: 3000
        - path: /toposervice/(.*)
          pathType: ImplementationSpecific
          backservicename: "toposervice-service"
          backserviceport: 8181
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

images:
  server:
    repository: codeurjc/server
    tag: "v1.0"
    pullPolicy: IfNotPresent
  planner:
    repository: codeurjc/planner
    tag: "v1.0"
    pullPolicy: IfNotPresent
  toposervice:
    repository: codeurjc/toposervice
    tag: "v1.0"
    pullPolicy: IfNotPresent
  weatherservice:
    repository: codeurjc/weatherservice
    tag: "v1.0"
    pullPolicy: IfNotPresent
  mongo:
    repository: mongo
    tag: "5.0.6-focal"
    pullPolicy: IfNotPresent
  mysql:
    repository: mysql
    tag: "8.0.28"
    pullPolicy: IfNotPresent
  rabbitmq:
    repository: rabbitmq
    tag: "3.9-management"
    pullPolicy: IfNotPresent

# Default values for eoloplants.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
