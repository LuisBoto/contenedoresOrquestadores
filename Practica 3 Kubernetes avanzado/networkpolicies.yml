---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: mysql2server
spec:
  podSelector:
    matchLabels:
      app: mysql
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: server
    ports:
    - port: 3306
      protocol: TCP
  egress:
  - ports:
    - port: 3306
      protocol: TCP
  policyTypes:
  - Ingress
  - Egress

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: mongo2toposervice
spec:
  podSelector:
    matchLabels:
      app: mongodb
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: toposervice
    ports:
    - port: 27017
      protocol: TCP  
  egress:
  - ports:
    - port: 27017
      protocol: TCP
  policyTypes:
  - Ingress
  - Egress

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: rabbitmq2server-planner
spec:
  podSelector:
    matchLabels:
      app: rabbitmq
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: server
    ports:
    - port: 5672
      protocol: TCP
  - from:
    - podSelector:
        matchLabels:
          app: planner
    ports:
    - port: 5672
      protocol: TCP
  egress:
  - ports:
    - port: 5672
      protocol: TCP
    - port: 15672
      protocol: TCP
  policyTypes:
  - Ingress
  - Egress

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: toposervice2planner
spec:
  podSelector:
    matchLabels:
      app: toposervice
  ingress:
  - from: []
    ports:
    - protocol: TCP
      port: 8181
  egress:
  - {}
  policyTypes:
  - Ingress
  - Egress

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: weatherservice2planner
spec:
  podSelector:
    matchLabels:
      app: weatherservice
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: planner
    ports:
    - port: 9090
      protocol: TCP
  egress:
  - {}
  policyTypes:
  - Ingress
  - Egress

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: server-policy
spec:
  podSelector:
    matchLabels:
      app: server
  ingress:
  - from: []
    ports:
    - protocol: TCP
      port: 3000
  - from: []
    ports:
    - protocol: TCP
      port: 80
  egress:
  - ports:
    - port: 80
    - port: 443
    - port: 53
      protocol: UDP
    - port: 53
      protocol: TCP
    - port: 3000
    - port: 3306
    - port: 5672
  policyTypes:
  - Ingress
  - Egress

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: planner-egress-policy
spec:
  podSelector:
    matchLabels:
      app: planner
  egress:
  - ports:
    - port: 8181
    - port: 9090
    - port: 5672
  policyTypes:
  - Egress


